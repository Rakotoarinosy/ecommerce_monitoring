version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/app:/app/app
    depends_on:
      - mongodb
      - redis

  frontend:
    build: ./frontend
    ports:
      - "4200:4200"  # Angular tourne sur 4200
    volumes:
      - ./frontend/src:/app/src  # Monte le code source dans le conteneur
      - /app/node_modules  # Ignore node_modules pour Ã©viter les conflits
    depends_on:
      - backend

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery_worker:
    build: ./backend
    env_file:
      - ./backend/.env
    depends_on:
      - backend
      - redis
    command: celery -A app.celery_worker worker --loglevel=info

  celery_beat:
    build: ./backend
    env_file:
      - ./backend/.env
    depends_on:
      - backend
      - redis
    command: celery -A app.celery_worker beat --loglevel=info

  # loki:
  #   image: grafana/loki:2.6.1
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml

  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   depends_on:
  #     - loki
  #   volumes:
  #     - grafana_data:/var/lib/grafana

volumes:
  mongodb_data:
  redis_data: